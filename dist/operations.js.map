{"version":3,"sources":["../src/operations.js"],"names":["operationTypes","REPLACE_ARRAY_ELEMENT","arrayOld","keyMatch","value","matchFn","elem","foundIndex","findIndex","slice","MERGE_ARRAY_ELEMENTS","arrayNew","FILTER_ARRAY","filter","SORT_ARRAY","key","order","sort","UNWIND_TO_ARRAY","keyPath","MAP_ARRAY_ITEMS","arrayContext","map","MAP_OBJECT_FROM_KEYS","keyArray","reduce","accum","INDEX_FROM_ARRAY","keyPathIndex","ARRAY_FROM_INDEX","indexContext","payload","redu","Object","keys","ARRAY_FROM_KEYS","context","MERGE_OBJECT_SHALLOW_PAYLOAD_CONTEXT","objContext","objPayload","MERGE_OBJECT_SHALLOW_CONTEXT_PAYLOAD","OVERWRITE","oldData","newData"],"mappings":"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","sourcesContent":["import { drillDown, indexByKey, unwindByKey, filterByKey, sortByKey/*, ifNotInAddToIndex*/ } from 'deepdown';\n\nconst operationTypes = {\n    // array operators\n    REPLACE_ARRAY_ELEMENT: (arrayOld, { keyMatch, value }) => {\n        const matchFn = elem => drillDown(elem, keyMatch) === drillDown(value, keyMatch)\n        const foundIndex = arrayOld.findIndex(matchFn);\n        if (foundIndex === -1) {\n            return [\n                ...arrayOld,\n                value,\n            ];\n        }\n        return [\n            ...arrayOld.slice(0, foundIndex),\n            value,\n            ...arrayOld.slice(foundIndex + 1),\n        ]\n    },\n    MERGE_ARRAY_ELEMENTS: (arrayOld, arrayNew) => {\n        return [\n            ...arrayOld,\n            ...arrayNew,\n        ];\n    },\n    FILTER_ARRAY: (arrayOld, filter) => {\n        return arrayOld.filter(filterByKey(filter))\n    },\n    SORT_ARRAY: (arrayOld, {key, order}) => {\n        return arrayOld.sort(sortByKey({key, order}))\n    },\n    UNWIND_TO_ARRAY: (arrayOld, keyPath) => {\n        return unwindByKey(arrayOld, keyPath)\n    },\n    // UNIQUE_ARRAY_ITEMS: (arrayContext, keyPathUnique) => {\n    //     const uniqueSet = {};\n    //     return arrayContext.filter(ifNotInAddToIndex(uniqueSet, keyPathUnique));\n    // },\n    MAP_ARRAY_ITEMS: (arrayContext, keyPath) => {\n        return arrayContext.map(elem => drillDown(elem, keyPath))\n    },\n    MAP_OBJECT_FROM_KEYS: (keyArray, value) => {\n        return keyArray.reduce((accum, elem) => {\n            return {\n                [elem]: value,\n                ...accum\n            }\n        }, {})\n    },\n    // array to object\n    INDEX_FROM_ARRAY: (arrayContext, keyPathIndex) => {\n        return indexByKey(arrayContext, keyPathIndex);\n    },\n    ARRAY_FROM_INDEX: (indexContext, payload) => {\n        const redu = (accum, key) => {\n            return [ ...accum, indexContext[key][0], ];\n        }\n        return Object.keys(indexContext).reduce(redu, []);\n    },\n    ARRAY_FROM_KEYS: (context, payload) => {\n        const keys = Object.keys(context)\n        return keys\n    },\n    // object operators\n    MERGE_OBJECT_SHALLOW_PAYLOAD_CONTEXT: (objContext, objPayload) => {\n        return {\n            ...objPayload,\n            ...objContext,\n        }\n    },\n    MERGE_OBJECT_SHALLOW_CONTEXT_PAYLOAD: (objContext, objPayload) => {\n        return {\n            ...objContext,\n            ...objPayload,\n        }\n    },\n    OVERWRITE: (oldData, newData) => newData\n};\n\nexport default operationTypes;\n"],"file":"operations.js"}